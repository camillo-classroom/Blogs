@page "/{slug?}"
@using Blogs.DTO.ControleAcessos
@using Blogs.DTO.Postagens
@using Blogs.Front.Helpers
@using Ganss.Xss

@{
    var sanitizer = new HtmlSanitizer();
    sanitizer.AllowedTags.Clear();
    sanitizer.AllowedAtRules.Clear();
    sanitizer.AllowedClasses.Clear();
    sanitizer.AllowedCssProperties.Clear();
    sanitizer.AllowedSchemes.Clear();
    sanitizer.AllowedTags.Add("br");
}

@if (usuario == null)
{
    <p>Carregando...</p>
}
else
{
    <h3>Blog do(a) @(usuario?.Nome)</h3>

    <p>@usuario?.Apresentacao</p>

    @if (postagens == null)
    {
        <p>Não há postagens para exibir.</p>
    }
    else
    {
        <h4>Postagens:</h4>

        <hr />

        <div>
            @foreach (var postagem in postagens)
            {
                <div>
                    <h4>@postagem.Titulo</h4>
                    <strong>@postagem.DataHora.ToString("dd/MM/yyyy HH:mm:ss")</strong>
                    <div>
                        @((MarkupString)sanitizer.Sanitize(postagem.Conteudo))
                    </div>
                </div>

                <hr />
            }
        </div>
    }
}
@code {
    [Parameter]
    public string? Slug { get; set; }

    private UsuarioDTO? usuario;
    private IEnumerable<PostagemDTO>? postagens;

    protected override async Task OnInitializedAsync()
    {
        usuario = await ApiBackend.GetAsync<UsuarioDTO>($"usuarios/slug/{Slug}");
        postagens = await ApiBackend.GetAsync<IEnumerable<PostagemDTO>>($"postagens/{usuario?.Id}");
    }
}
